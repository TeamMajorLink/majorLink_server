# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # permissions:
    #   contents: read

    steps:
    # - uses: actions/checkout@v4
    - name: Checkout
      uses: actions/checkout@v3

    #setting jdk
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    #Setting yml
    - name: Convert to dev YML
      run: |
        if [ -e "./majorLink/src/main/resources/application.yml" ]; then rm ./majorLink/src/main/resources/application.yml; fi
        echo "${{ secrets.APPLICATION_SECRET }}" > ./majorLink/src/main/resources/application.yml
        
    #gradlew chmod
    - name: Grant execute permission for gradlew 
      run: chmod +x ./gradlew
      
    # Spring Boot Build
    - name: Spring Boot Build
      run: ./gradlew clean build -x test


#----------------- Docker --------

    # Docker Image Build
    - name: Docker Image Build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }} .
      
    # DockerHub Login
    - name: Docker Hub Login
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} 
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    # Docker Hub push
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }}

#---------EC2----------
    #AWS EC2 Server Connect & Docken 명령어 실행
    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.6 
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          sudo docker stop ${{ secrets.DOCKERHUB_IMAGENAME }}
          sudo docker rm ${{ secrets.DOCKERHUB_IMAGENAME }}
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }}
          sudo docker run -it -d -p 8080:8080 --name ${{ secrets.DOCKERHUB_IMAGENAME }} -e TZ=Asia/Seoul ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }}



      


      
    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
  #   - name: Setup Gradle
  #     uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  #   - name: Build with Gradle Wrapper
  #     run: ./gradlew build

  #   # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
  #   # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
  #   #
  #   # - name: Setup Gradle
  #   #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
  #   #   with:
  #   #     gradle-version: '8.5'
  #   #
  #   # - name: Build with Gradle 8.5
  #   #   run: gradle build

  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
